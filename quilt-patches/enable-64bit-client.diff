Index: jdk8-minimal/common/autoconf/jdk-options.m4
===================================================================
--- jdk8-minimal.orig/common/autoconf/jdk-options.m4
+++ jdk8-minimal/common/autoconf/jdk-options.m4
@@ -88,21 +88,11 @@ AC_DEFUN_ONCE([JDKOPT_SETUP_JVM_VARIANTS
   JVM_VARIANT_ZERO=`$ECHO "$JVM_VARIANTS" | $SED -e '/,zero,/!s/.*/false/g' -e '/,zero,/s/.*/true/g'`
   JVM_VARIANT_ZEROSHARK=`$ECHO "$JVM_VARIANTS" | $SED -e '/,zeroshark,/!s/.*/false/g' -e '/,zeroshark,/s/.*/true/g'`
 
-  if test "x$JVM_VARIANT_CLIENT" = xtrue; then
-    if test "x$OPENJDK_TARGET_CPU_BITS" = x64; then
-      AC_MSG_ERROR([You cannot build a client JVM for a 64-bit machine.])
-    fi
-  fi
   if test "x$JVM_VARIANT_KERNEL" = xtrue; then
     if test "x$OPENJDK_TARGET_CPU_BITS" = x64; then
       AC_MSG_ERROR([You cannot build a kernel JVM for a 64-bit machine.])
     fi
   fi
-  if test "x$JVM_VARIANT_MINIMAL1" = xtrue; then
-    if test "x$OPENJDK_TARGET_CPU_BITS" = x64; then
-      AC_MSG_ERROR([You cannot build a minimal JVM for a 64-bit machine.])
-    fi
-  fi
 
   # Replace the commas with AND for use in the build directory name.
   ANDED_JVM_VARIANTS=`$ECHO "$JVM_VARIANTS" | $SED -e 's/^,//' -e 's/,$//' -e 's/,/AND/'`
Index: jdk8-minimal/hotspot/make/Makefile
===================================================================
--- jdk8-minimal.orig/hotspot/make/Makefile
+++ jdk8-minimal/hotspot/make/Makefile
@@ -202,13 +202,9 @@ ifeq ($(OSNAME),windows)
 	@$(ECHO) "No compiler1 ($(VM_TARGET)) for ARCH_DATA_MODEL=$(ARCH_DATA_MODEL)"
   endif
 else
-  ifeq ($(ARCH_DATA_MODEL), 32)
 	$(CD) $(OUTPUTDIR); \
 	    $(MAKE) -f $(ABS_OS_MAKEFILE) \
 		      $(MAKE_ARGS) $(VM_TARGET)
-  else
-	@$(ECHO) "No compiler1 ($(VM_TARGET)) for ARCH_DATA_MODEL=$(ARCH_DATA_MODEL)"
-  endif
 endif
 
 # Build compiler2 (server) rule, different for platforms
@@ -243,7 +239,6 @@ generic_buildshark: $(HOTSPOT_SCRIPT)
 generic_buildminimal1: $(HOTSPOT_SCRIPT)
 ifeq ($(JVM_VARIANT_MINIMAL1),true)
 	$(MKDIR) -p $(OUTPUTDIR)
-  ifeq ($(ARCH_DATA_MODEL), 32)
     ifeq ($(OSNAME),windows)
 	$(ECHO) "No ($(VM_TARGET)) for $(OSNAME) ARCH_DATA_MODEL=$(ARCH_DATA_MODEL)" ;
     else
@@ -254,9 +249,6 @@ ifeq ($(JVM_VARIANT_MINIMAL1),true)
 	$(MAKE) -f $(ABS_OS_MAKEFILE) $(MAKE_ARGS) $(VM_TARGET) ;
       endif
     endif
-  else
-	    @$(ECHO) "No ($(VM_TARGET)) for $(OSNAME) ARCH_DATA_MODEL=$(ARCH_DATA_MODEL)"
-  endif
 else
 	@$(ECHO) "Error: trying to build a minimal target but JVM_VARIANT_MINIMAL1 is not true."
 endif
@@ -569,11 +561,7 @@ test_product test_optimized test_fastdeb
 
 # C1 test targets
 test_product1 test_optimized1 test_fastdebug1 test_debug1:
-  ifeq ($(ARCH_DATA_MODEL), 32)
 	@$(MAKE) generic_test ALTJVM_DIR="$(C1_DIR)/$(@:test_%1=%)"
-  else
-	@$(ECHO) "No compiler1 ($(@:test_%=%)) for ARCH_DATA_MODEL=$(ARCH_DATA_MODEL)"
-  endif
 
 # Zero test targets
 test_productzero test_optimizedzero test_fastdebugzero test_debugzero:
Index: jdk8-minimal/hotspot/make/linux/makefiles/defs.make
===================================================================
--- jdk8-minimal.orig/hotspot/make/linux/makefiles/defs.make
+++ jdk8-minimal/hotspot/make/linux/makefiles/defs.make
@@ -122,14 +122,9 @@ endif
 
 # On 32 bit linux we build server and client, on 64 bit just server.
 ifeq ($(JVM_VARIANTS),)
-  ifeq ($(ARCH_DATA_MODEL), 32)
     JVM_VARIANTS:=client,server
     JVM_VARIANT_CLIENT:=true
     JVM_VARIANT_SERVER:=true
-  else
-    JVM_VARIANTS:=server
-    JVM_VARIANT_SERVER:=true
-  endif
 endif
 
 # determine if HotSpot is being built in JDK6 or earlier version
Index: jdk8-minimal/jdk/make/CopyFiles.gmk
===================================================================
--- jdk8-minimal.orig/jdk/make/CopyFiles.gmk
+++ jdk8-minimal/jdk/make/CopyFiles.gmk
@@ -292,57 +292,33 @@ JVMCFG := $(JVMCFG_DIR)/jvm.cfg
 
 # To do: should this also support -zeroshark?
 
-ifeq ($(OPENJDK_TARGET_CPU_BITS), 64)
-  COPY_JVM_CFG_FILE := true
+$(JVMCFG):
+	$(MKDIR) -p $(@D)
+	$(RM) $(@)
+ifeq ($(JVM_VARIANT_CLIENT), true)
+	$(PRINTF) "-client KNOWN\n">>$(@)
+ifeq ($(JVM_VARIANT_SERVER), true)
+	$(PRINTF) "-server KNOWN\n">>$(@)
 else
-  # On 32-bit machines we have three potential VMs: client, server and minimal.
-  # Historically we usually have both client and server and so that is what the
-  # committed jvm.cfg expects (including platform specific ergonomics switches
-  # to decide whether to use client or server by default). So when we have anything
-  # other than client and server we need to define a new jvm.cfg file.
-  # The main problem is deciding whether to use aliases for the VMs that are not
-  # present and the current position is that we add aliases for client and server, but
-  # not for minimal.
-  CLIENT_AND_SERVER := $(and $(findstring true, $(JVM_VARIANT_SERVER)), $(findstring true, $(JVM_VARIANT_CLIENT)))
-  ifeq ($(CLIENT_AND_SERVER), true)
-    COPY_JVM_CFG_FILE := true
-  else
-    # For zero, the default jvm.cfg file is sufficient
-    ifeq ($(JVM_VARIANT_ZERO), true)
-      COPY_JVM_CFG_FILE := true
-    endif
-  endif
+	$(PRINTF) "-server ALIASED_TO -client\n">>$(@)
+endif
+ifeq ($(JVM_VARIANT_MINIMAL1), true)
+	$(PRINTF) "-minimal KNOWN\n">>$(@)
 endif
-
-ifeq ($(COPY_JVM_CFG_FILE), true)
-  $(JVMCFG): $(JVMCFG_SRC)
-	$(call install-file)
 else
-  $(JVMCFG):
-	$(MKDIR) -p $(@D)
-	$(RM) $(@)
-        # Now check for other permutations
-        ifeq ($(JVM_VARIANT_SERVER), true)
-	  $(PRINTF) "-server KNOWN\n">>$(@)
-	  $(PRINTF) "-client ALIASED_TO -server\n">>$(@)
-          ifeq ($(JVM_VARIANT_MINIMAL1), true)
-	    $(PRINTF) "-minimal KNOWN\n">>$(@)
-          endif
-        else
-          ifeq ($(JVM_VARIANT_CLIENT), true)
-	    $(PRINTF) "-client KNOWN\n">>$(@)
-	    $(PRINTF) "-server ALIASED_TO -client\n">>$(@)
-            ifeq ($(JVM_VARIANT_MINIMAL1), true)
-	      $(PRINTF) "-minimal KNOWN\n">>$(@)
-            endif
-          else
-            ifeq ($(JVM_VARIANT_MINIMAL1), true)
-	      $(PRINTF) "-minimal KNOWN\n">>$(@)
-	      $(PRINTF) "-server ALIASED_TO -minimal\n">>$(@)
-	      $(PRINTF) "-client ALIASED_TO -minimal\n">>$(@)
-            endif
-          endif
-        endif
+ifeq ($(JVM_VARIANT_SERVER), true)
+	$(PRINTF) "-server KNOWN\n">>$(@)
+	$(PRINTF) "-client ALIASED_TO -server\n">>$(@)
+ifeq ($(JVM_VARIANT_MINIMAL1), true)
+	$(PRINTF) "-minimal KNOWN\n">>$(@)
+endif
+else
+ifeq ($(JVM_VARIANT_MINIMAL1), true)
+	$(PRINTF) "-minimal KNOWN\n">>$(@)
+	$(PRINTF) "-server ALIASED_TO -minimal\n">>$(@)
+	$(PRINTF) "-client ALIASED_TO -minimal\n">>$(@)
+endif
+endif
 endif
 
 COPY_FILES += $(JVMCFG)
